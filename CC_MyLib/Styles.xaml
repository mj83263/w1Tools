<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:CC_MyLib">
    <local:MultiplyConverter x:Key="MultiplyConverter"/>


    <ControlTemplate TargetType="{x:Type RadioButton}" x:Key="RoundCornerRadioButtonTemplate">
        <Grid>
            <Border x:Name="Bd" CornerRadius="5" Background="Transparent" SnapsToDevicePixels="True" >
                <ContentPresenter Margin="2" x:Name="Cp" HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.Foreground="Black" />
            </Border>

        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Cp"  Property="TextBlock.Foreground" Value="DarkGreen"></Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Bd" Property="Background" Value="MediumPurple"></Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="RadioButton" x:Key="RadioButtonStyle"  >
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Template" Value="{StaticResource RoundCornerRadioButtonTemplate}"/>
        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="FontSize" Duration="0:0:0.2" From="24" To="32"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="FontSize" Duration="0:0:0.2" From="32" To="24" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RoundCornerWindowStyle" TargetType="Window">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Border Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                        BorderThickness="1"
                        BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                        CornerRadius="5">
                            <Grid >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Border Grid.Row="0" Background="Red">
                                    <!-- 窗口标题栏 -->
                                <StackPanel Orientation="Horizontal">
                                    <Button Content="关闭"></Button>
                                </StackPanel>
                                </Border>

                            <ContentPresenter Grid.Row="1" Margin="5,0"/>
                        </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type AccessText}">
        <Setter Property="FontSize" Value="10"></Setter>
    </Style>
    <RadialGradientBrush  x:Name="RgdbBrush0" x:Key="RgdbBrush0_key" >
        <GradientStop Offset="0" Color="White"></GradientStop>
        <GradientStop Offset="0.5" Color="LightSteelBlue"></GradientStop>
        <GradientStop Offset="1" Color="GreenYellow"></GradientStop>
    </RadialGradientBrush>
    <RadialGradientBrush  x:Name="RgdbBrush1" x:Key="RgdbBrush1_key" >
        <GradientStop Offset="0" Color="LightSteelBlue"></GradientStop>
        <GradientStop Offset="0.5" Color="LightBlue"></GradientStop>
        <GradientStop Offset="1" Color="LawnGreen"></GradientStop>
    </RadialGradientBrush>
    <RadialGradientBrush  x:Name="RgdbBrush3" x:Key="RgdbBrush3_key" >
        <GradientStop Offset="0" Color="LightSteelBlue"></GradientStop>
        <GradientStop Offset="0.5" Color="LightBlue"></GradientStop>
        <GradientStop Offset="1" Color="Lime"></GradientStop>
    </RadialGradientBrush>
    <RadialGradientBrush  x:Name="RgdbBrush30" x:Key="RgdbBrush30_key" >
        <GradientStop Offset="0" Color="LightSteelBlue"></GradientStop>
        <GradientStop Offset="0.5" Color="Lime"></GradientStop>
        <GradientStop Offset="1" Color="DarkGreen"></GradientStop>
    </RadialGradientBrush>
    <RadialGradientBrush  x:Name="RgdbBrush4" x:Key="RgdbBrush4_key" >
        <GradientStop Offset="0" Color="GhostWhite"></GradientStop>
        <GradientStop Offset="1" Color="Red"></GradientStop>
        <!--<GradientStop Offset="1" Color="Red"></GradientStop>-->
    </RadialGradientBrush>

    <BlurEffect x:Key="outerEffecKey"></BlurEffect>
    <DropShadowEffect x:Key="DropShadowKey" Opacity="80" ></DropShadowEffect>
    <!-- 按键 -->
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    <Style  TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="5">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource RgdbBrush0_key}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource RgdbBrush0_key}"/>
                            <Setter Property="Effect"  Value="{StaticResource DropShadowKey}"/>
                            <!--<BitmapEffectGroup></BitmapEffectGroup>-->

                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource RgdbBrush1_key}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource RgdbBrush1_key}"/>
                            <!--<Setter Property="Effect"  Value="{StaticResource  DropShadowKey}"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Textboex-->
    <Style TargetType="TextBox">
        <Setter Property="AcceptsReturn" Value="True"></Setter>
    </Style>

    <RadialGradientBrush  x:Key="Brush1" >
        <GradientStop Offset="0" Color="White"></GradientStop>
        <GradientStop Offset="1" Color="LightSteelBlue"></GradientStop>
        <!--<GradientStop Offset="1" Color="LightSlateGray"></GradientStop>-->
    </RadialGradientBrush>
    <RadialGradientBrush  x:Key="Brush2" >
        <GradientStop Offset="0" Color="LightSlateGray"></GradientStop>
        <GradientStop Offset="0.5" Color="LightSteelBlue"></GradientStop>
        <GradientStop Offset="1" Color="LawnGreen"></GradientStop>
    </RadialGradientBrush>

    <RadialGradientBrush  x:Key="Brush3" >
        <GradientStop Offset="0" Color="LightSlateGray"></GradientStop>
        <GradientStop Offset="0.5" Color="DeepSkyBlue"></GradientStop>
        <!--<GradientStop Offset="1" Color="Blue"></GradientStop>-->
    </RadialGradientBrush>
    <Style x:Key="LightToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Ellipse x:Name="border" Width="{Binding Width,Converter={StaticResource MultiplyConverter} , ConverterParameter=0.8, RelativeSource={ RelativeSource Mode=TemplatedParent} }" Height="{Binding Height , Converter={StaticResource MultiplyConverter}, ConverterParameter=0.8, RelativeSource={RelativeSource  Mode=TemplatedParent}}" 
                                 Fill="{StaticResource Brush1}" Opacity="100"/>
                        <Ellipse x:Name="Light" Width="{Binding Width,Converter={StaticResource MultiplyConverter} , ConverterParameter=0.7, RelativeSource={ RelativeSource Mode=TemplatedParent} }" Height="{Binding Height , Converter={StaticResource MultiplyConverter}, ConverterParameter=0.7, RelativeSource={RelativeSource  Mode=TemplatedParent}}" Fill="AliceBlue"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Effect"  Value="{StaticResource DropShadowKey}"/>

                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Light" Property="Fill" Value="{StaticResource RgdbBrush30_key }"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="Light" Property="Fill" Value="{StaticResource RgdbBrush4_key }"/>
                        </Trigger>
 
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>